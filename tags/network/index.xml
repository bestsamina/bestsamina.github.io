<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on Samina&#39;s 技術筆記 X 點滴紀錄</title>
    <link>https://bestsamina.github.io/tags/network/</link>
    <description>Recent content in Network on Samina&#39;s 技術筆記 X 點滴紀錄</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Samina Fu</copyright>
    <lastBuildDate>Mon, 20 Aug 2018 00:20:05 +0800</lastBuildDate>
    
	<atom:link href="https://bestsamina.github.io/tags/network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>關於加速 NFV Data Plane 的 SR-IOV 與 DPDK</title>
      <link>https://bestsamina.github.io/posts/2018-08-20-dpdk-sriov-learn/</link>
      <pubDate>Mon, 20 Aug 2018 00:20:05 +0800</pubDate>
      
      <guid>https://bestsamina.github.io/posts/2018-08-20-dpdk-sriov-learn/</guid>
      <description>本篇是個初步理解 SR-IOV 與 DPDK 兩個技術的筆記。
內容綜合官網的說明、參考 https://www.metaswitch.com/blog/accelerating-the-nfv-data-plane 的描述、自我的理解。 如有任何描述錯誤，敬請指教。
 本篇是個個人筆記。文章脈絡大致如下：
- 一句話形容 SR-IOV 與 DPDK - SR-IOV 的源起 - SR-IOV 的技術理解 - DPDK 的緣起 - DPDK 的技術理解
一句話形容 SR-IOV 與 DPDK 一句話秒懂的形容：
- SR-IOV: SR-IOV 是一種技術，使用這項技術，就讓虛擬主機或是虛擬化的容器如同直接接上實體網卡一樣，封包一進到實體主機的網卡後，就等於直接進到虛擬主機或是虛擬化的容器中。 - DPDK: DPDK 這項技術，可以讓進到實體主機的網路封包，直接跳過 Linux Kernel 層，送到 User space 的 Applications 做處理。
以上兩種技術，皆是 Intel 最先提出的。
SR-IOV 的源起 這一切要回到當初，虛擬主機的技術講起。
假設在一個實體主機上有幾台 VM，此時當實體主機上的網卡 (NIC) 收到一個封包的時候，會向 CPU 發送一個中斷請求 (interrupt request = IRQ)，然後 CPU 就必須中斷目前在做的事情，轉而處理這封包，把封包送到對的 VM 中。而封包那麼多，中斷就會一直發生，這樣也會降低 CPU 的效能。而且不只有實體主機上這個 CPU 的 IRQ 問題，VMM (Virtual Machine Manager) 的 CPU 也會被中斷，只要它辨識出 package 要送往的 VM ，它就會向 VM 自己的 CPU 請求中斷，叫 VM 的 CPU 來處理這封包。</description>
    </item>
    
    <item>
      <title>在 vagrant(Ubuntu 16.04) 中安裝 DPDK 與 OVS 紀錄筆記</title>
      <link>https://bestsamina.github.io/posts/2018-06-27-dpdk-ovs-vagrant/</link>
      <pubDate>Wed, 27 Jun 2018 14:51:05 +0800</pubDate>
      
      <guid>https://bestsamina.github.io/posts/2018-06-27-dpdk-ovs-vagrant/</guid>
      <description>本篇使用的 Vagrantfile 可參閱 https://github.com/sufuf3/network-study-notes/blob/master/DPDK_OVS/Vagrantfile
 前言 這是一個 Open vSwitch with DPDK 的安裝紀錄，OVS 可以在 userspace 完全使用 DPDK library 。
環境需求  如果是使用 Linux ，在 Linux 中 kernel 版本要大於 v3.0.0 版。 DPDK v17.11.2 如果會使用到物理的 NIC 網卡，那就要使用有支援 DPDK 的網卡。可以參考 http://core.dpdk.org/supported/。(網卡查詢：`lspci | grep -i net`)   參考來源：http://docs.openvswitch.org/en/latest/intro/install/dpdk/
前置作業 參考 http://doc.dpdk.org/guides/linux_gsg/sys_reqs.html 在系統需求上，有三個在編譯 DPDK 的前置作業。
1. 在 x86 上 BIOS 設定的先決條件 不過大多數的平台，不需要特殊的 BIOS 設定，所以這邊跳過。
2. 需要的工具以及 Libraries  GNU make coreutils: cmp, sed, grep, arch, etc.</description>
    </item>
    
    <item>
      <title>[Network] 網路讀書學習筆記</title>
      <link>https://bestsamina.github.io/2018/04/03/network-%E7%B6%B2%E8%B7%AF%E8%AE%80%E6%9B%B8%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 03 Apr 2018 14:51:05 +0800</pubDate>
      
      <guid>https://bestsamina.github.io/2018/04/03/network-%E7%B6%B2%E8%B7%AF%E8%AE%80%E6%9B%B8%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>這是網路相關的讀書學習筆記
 https://github.com/sufuf3/network-study-notes  </description>
    </item>
    
  </channel>
</rss>