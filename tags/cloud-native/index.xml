<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Native on Life &amp; Technological Journey of Samina</title>
    <link>https://bestsamina.github.io/tags/cloud-native/</link>
    <description>Recent content in Cloud Native on Life &amp; Technological Journey of Samina</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Samina Fu</copyright>
    <lastBuildDate>Thu, 10 Oct 2019 16:48:35 +0800</lastBuildDate>
    
	<atom:link href="https://bestsamina.github.io/tags/cloud-native/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>邊緣運算之容器管理工具 - K3s 之介紹與玩耍</title>
      <link>https://bestsamina.github.io/posts/2019-10-10-k3s-intro-and-play/</link>
      <pubDate>Thu, 10 Oct 2019 16:48:35 +0800</pubDate>
      
      <guid>https://bestsamina.github.io/posts/2019-10-10-k3s-intro-and-play/</guid>
      <description>前言 Kubernetes 是雲原生技術 (cloud-native technologies)，也是雲原生計算 (Cloud Native Computing) 重要的技術之一，而且在使用 Kubernetes 時，應用的硬體資源通常也比較好。然而， 容器 (Container) 技術的崛起，也帶動了邊緣運算 (Edge computing) 導入 Container 技術的風潮。
邊緣運算顧名思義就是將應用程式等服務運算，由網路中心節點，移往網路邏輯上的邊緣節點來處理。也就是從網路中心節點處理大型服務來分解，切割成更小、更容易管理的部份，分散到邊緣節點去處理。可以想像，如果網路中心節點的角色如同總經理，邊緣節點的角色如同部門經理，而終端裝置的角色如同基層員工。在這架構下，想當然耳就是個分散式架構，而邊緣節點因為更接近於終端裝置，因此可以加快資料的處理與傳送速度，減少延遲。如同基層員工直經回報部門經理，而重要的資訊，部門經理再回報給總經理一樣。也因此在邊緣運算的應用中一直都有重要的應用場景在，例如大家常聽到的 IoT。
當邊緣運算節點硬體效能越來越強，能做的事情當然也就可以越來越多，即便是個嵌入式主機板，也是可以跑很多應用程式的 Container 的。然而有了越來越多的容器，當然也需要厲害的 Container 管理工具。
K3s 就是在這需求下誕生的產品。
K3s 介紹 K3s 簡介 K3s 是由 Rancher Labs 推出的 輕量化 Kubernetes 開源專案，也是 CNCF 官方認證的 Kubernetes 發布版本。而且是以產品設計出發的，讓管理者在設備資源有限的環境下，仍然可以良好的運作 Kubernetes，並管理 containers。因此，在這優勢下，K3s 可以很好的應用在 Edge, IoT, CI, ARM 等情境、環境下。
它所需的系統資源並不多：
 在 Server 端： 只需要 512 MB 在 Node 端：只需要 75MB Disk 大小只需 200MB  而且可以用在 x86_64, ARMv7, ARM64 等平台架構。</description>
    </item>
    
  </channel>
</rss>